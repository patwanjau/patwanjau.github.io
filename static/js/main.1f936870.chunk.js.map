{"version":3,"sources":["profile.jpeg","Education.js","WorkExperience.js","Bio.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Education","props","this","react_default","a","createElement","className","Object","assign","href","url","target","rel","institution","from","to","course","Component","defaultProps","WorkExperience","org","year_from","year_to","role","title","duties","map","duty","Bio","urlBlankTarget","fname","lname","urls","linkedin","react_fontawesome_index_es","icon","size","github","fb","twitter","library","add","fab","App","bioProps","contacts","phone","src","logo","alt","src_Bio","prop","src_Education","src_WorkExperience","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f936870.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.b474faff.jpeg\";","import React, {Component} from 'react';\n\nclass Education extends Component {\n  render() {\n    let props = this.props;\n    const urlBlankTarget = {target: \"_blank\", rel: \"noopener noreferrer\"};\n    return (<div className=\"edu-bckgrnd\">\n      <div className=\"inst-name\">\n        <a className=\"inst-url\" href={props.url} {...urlBlankTarget}>{props.institution}</a>\n      </div>\n        <div className=\"time\">\n          {props.from}\n          - {props.to}\n        </div>\n        <div className=\"course\">{props.course}</div>\n    </div>);\n  }\n\n  static defaultProps = {\n    to: \"To date\"\n  }\n}\n\nexport default Education;\n","import React, {Component} from 'react';\nimport './styles/work-experience.css'\n\nclass WorkExperience extends Component {\n  render() {\n    let props = this.props;\n    const urlBlankTarget = {target: \"_blank\", rel: \"noopener noreferrer\"};\n    return (<div className=\"work-exp\">\n      <div className=\"org\"><a href={props.url} {...urlBlankTarget}>{props.org}</a></div>\n      <div className=\"period\">{props.year_from} - {props.year_to}</div>\n      <div className=\"role\">{props.role.title}</div>\n      <ul>\n        {props.role.duties.map(duty => <li>{duty}</li>)}\n      </ul>\n    </div>);\n  }\n}\n\nexport default WorkExperience;\n","import React, {Component} from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport './styles/bio.css';\n\nclass Bio extends Component {\n  render() {\n    let props = this.props;\n    const urlBlankTarget = {target: \"_blank\", rel: \"noopener noreferrer\"};\n    return (<div className=\"bio\">\n      <div className=\"name\">\n        {props.fname} {props.lname}\n      </div>\n      {/* <div className=\"phone\"><a href={\"tel:\"+props.contacts.phone}>{props.contacts.phone}</a></div> */}\n      <ul className=\"social\">\n        <li className=\"cvs-github\">\n          <a href={props.urls.linkedin} {...urlBlankTarget}><FontAwesomeIcon icon={[\"fab\", \"linkedin\"]} size=\"lg\"/></a>\n        </li>\n        <li className=\"social-linkedin\">\n          <a href={props.urls.github} {...urlBlankTarget}><FontAwesomeIcon icon={[\"fab\", \"github\"]} size=\"lg\"/></a>\n        </li>\n        <li className=\"social-fb\">\n          <a href={props.urls.fb} {...urlBlankTarget}><FontAwesomeIcon icon={[\"fab\", \"facebook\"]} size=\"lg\"/></a>\n        </li>\n        <li className=\"social-twitter\">\n          <a href={props.urls.twitter} {...urlBlankTarget}><FontAwesomeIcon icon={[\"fab\", \"twitter\"]} size=\"lg\"/></a>\n        </li>\n      </ul>\n    </div>);\n  }\n}\n\nexport default Bio;\n","import React, { Component } from 'react';\nimport logo from './profile.jpeg';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport './styles/app.css';\nimport Education from './Education.js';\nimport WorkExperience from './WorkExperience.js';\nimport Bio from './Bio.js';\n\nlibrary.add(fab);\n\nclass App extends Component {\n  render() {\n  const eduProps = [{\n    institution: \"Kenyatta University\",\n    from: \"2008\",\n    to: \"2013\",\n    url: \"http://www.ku.ac.ke\",\n    course: \"BSc Software Engineering\"\n  },\n  {\n    institution: \"University of Nairobi\",\n    from: 2016,\n    to: 2018,\n    url: \"http://www.uonbi.ac.ke\",\n    course: \"MSc Computational Intelligence\"\n  }\n];\n  const workExpProps = [\n  {\n    org: \"Allied Technique Inc.\",\n    year_from: 2014,\n    year_to: 2016,\n    url: \"http://www.alliedtechnique.com\",\n    role: {\n      title: \"Software Developer\",\n      duties: [\n        \"Software Development\", \"Systems maintenance\", \"Research\", \"Technical documentation\"\n      ]\n    }\n  }\n];\nconst bioProps = {\n  fname: \"Patrick\",\n  lname: \"Wanjau\",\n  contacts: {\n    phone: \"+254725313338\"\n  },\n  urls: {\n    github: \"https://github.com/patwanjau\",\n    linkedin: \"https://www.linkedin.com/in/patwanjau\",\n    fb: \"https://facebook.com/patwanjau\",\n    twitter: \"https://twitter.com/patwanjau\"\n  }\n};\nreturn (\n  <div className=\"app\">\n    <header className=\"app-header\">\n    <img className=\"app-logo\" src={logo} alt={bioProps.fname} />\n    <Bio {...bioProps} />\n    <div className=\"edu\">Academic Background\n    {eduProps.map(prop => <Education {...prop} />)}\n    </div>\n    <div className=\"exp\">Experience\n    {workExpProps.map(prop => <WorkExperience {...prop}/>)}\n    </div>\n    </header>\n  </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}